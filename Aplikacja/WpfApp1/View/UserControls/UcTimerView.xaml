<UserControl x:Class="WpfApp1.View.UserControls.UcTimerView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:WpfApp1.View.UserControls"
             xmlns:VM="clr-namespace:WpfApp1.ViewModel.UserControls"
             
             mc:Ignorable="d" 
             d:DesignHeight="850" d:DesignWidth="800">
    <UserControl.DataContext>
        <VM:UcTimerViewModel/>
    </UserControl.DataContext>
    <UserControl.Resources>

        <Style x:Key="ProgressBarStyle"
               TargetType="Path">

            <Setter Property="HorizontalAlignment"
                    Value="Center" />
            <Setter Property="VerticalAlignment"
                    Value="Center" />
            <Setter Property="Stroke"
                    Value="#FF7000" />
            <Setter Property="StrokeThickness"
                    Value="20" />
            <Setter Property="StrokeStartLineCap"
                    Value="Flat" />
            <Setter Property="StrokeEndLineCap"
                    Value="Flat" />
            <Setter Property="StrokeDashOffset"
                    Value="0" />
            <Setter Property="StrokeDashArray"
                    Value="100" />
            <Setter Property="Data"
                    Value="M 0,100 A 100,100 0 1 1 400,100 A 100,100 0 1 1 0,100" />
            <Setter Property="Opacity"
                    Value="0" />

        </Style>

        <Style x:Key="ProgressBarBase"
               TargetType="Path">

            <Setter Property="HorizontalAlignment"
                    Value="Center" />
            <Setter Property="VerticalAlignment"
                    Value="Center" />
            <Setter Property="Stroke"
                    Value="#D8D8D8" />
            <Setter Property="StrokeThickness"
                    Value="20" />
            <Setter Property="StrokeStartLineCap"
                    Value="Flat" />
            <Setter Property="StrokeEndLineCap"
                    Value="Flat" />
            <Setter Property="StrokeDashOffset"
                    Value="0" />
            <Setter Property="StrokeDashArray"
                    Value="0.1" />
            <Setter Property="Data"
                    Value="M 0,100 A 100,100 0 1 1 400,100 A 100,100 0 1 1 0,100" />
            <Setter Property="Margin"
                    Value="10,0,0,90" />

        </Style>

        <!-- FocusVisual -->

        <Style x:Key="ButtonFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Border>
                            <Rectangle Margin="2"
                     StrokeThickness="1"
                     Stroke="#60000000"
                     StrokeDashArray="1 2" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Button -->
        <Style x:Key="circleButtonGreen" TargetType="Button">
            <Setter Property="SnapsToDevicePixels"
          Value="true" />
            <Setter Property="OverridesDefaultStyle"
          Value="true" />
            <Setter Property="FocusVisualStyle"
          Value="{StaticResource ButtonFocusVisual}" />
            <Setter Property="Width" Value="100"/>
            <Setter Property="Height" Value="100"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border TextBlock.Foreground="{TemplateBinding Foreground}"
                                x:Name="Border"
                                CornerRadius="50"
                                BorderThickness="1">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,1"
                                 StartPoint="0.5,0">
                                    <GradientStop Color="Green" Offset="0" />
                                    <GradientStop Color="Green" Offset="1" />
                                </LinearGradientBrush>
                            </Border.Background>
                            
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0:0:0.5" />
                                        <VisualTransition GeneratedDuration="0" To="Pressed" />
                                    </VisualStateGroup.Transitions>
                                    
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                                Storyboard.TargetName="Border">
                                                <EasingColorKeyFrame KeyTime="0" Value="LightGreen" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                                Storyboard.TargetName="Border">
                                                <EasingColorKeyFrame KeyTime="0" Value="GreenYellow" />
                                            </ColorAnimationUsingKeyFrames>

                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                
                            </VisualStateManager.VisualStateGroups>
                            <ContentPresenter Margin="2"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            RecognizesAccessKey="True" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefault"
                   Value="true">

                                <Setter TargetName="Border"
                    Property="BorderBrush">
                                    <Setter.Value>
                                        <LinearGradientBrush StartPoint="0,0"
                                     EndPoint="0,1">
                                            <GradientBrush.GradientStops>
                                                <GradientStopCollection>
                                                    <GradientStop Color="{DynamicResource DefaultBorderBrushLightBrush}"
                                    Offset="0.0" />
                                                    <GradientStop Color="{DynamicResource DefaultBorderBrushDarkColor}"
                                    Offset="1.0" />
                                                </GradientStopCollection>
                                            </GradientBrush.GradientStops>
                                        </LinearGradientBrush>

                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <!-- Button -->
        <Style x:Key="circleButtonRed" TargetType="Button">
            <Setter Property="SnapsToDevicePixels"
          Value="true" />
            <Setter Property="OverridesDefaultStyle"
          Value="true" />
            <Setter Property="FocusVisualStyle"
          Value="{StaticResource ButtonFocusVisual}" />
            <Setter Property="Width" Value="100"/>
            <Setter Property="Height" Value="100"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border TextBlock.Foreground="{TemplateBinding Foreground}"
                                x:Name="Border"
                                CornerRadius="50"
                                BorderThickness="1">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,1"
                                 StartPoint="0.5,0">
                                    <GradientStop Color="Red" Offset="0" />
                                    <GradientStop Color="Red" Offset="1" />
                                </LinearGradientBrush>
                            </Border.Background>
                            
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0:0:0.5" />
                                        <VisualTransition GeneratedDuration="0" To="Pressed" />
                                    </VisualStateGroup.Transitions>
                                    
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                                Storyboard.TargetName="Border">
                                                <EasingColorKeyFrame KeyTime="0" Value="DarkRed" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                                Storyboard.TargetName="Border">
                                                <EasingColorKeyFrame KeyTime="0" Value="OrangeRed" />
                                            </ColorAnimationUsingKeyFrames>

                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                
                            </VisualStateManager.VisualStateGroups>
                            <ContentPresenter Margin="2"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            RecognizesAccessKey="True" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefault"
                   Value="true">

                                <Setter TargetName="Border"
                    Property="BorderBrush">
                                    <Setter.Value>
                                        <LinearGradientBrush StartPoint="0,0"
                                     EndPoint="0,1">
                                            <GradientBrush.GradientStops>
                                                <GradientStopCollection>
                                                    <GradientStop Color="{DynamicResource DefaultBorderBrushLightBrush}"
                                    Offset="0.0" />
                                                    <GradientStop Color="{DynamicResource DefaultBorderBrushDarkColor}"
                                    Offset="1.0" />
                                                </GradientStopCollection>
                                            </GradientBrush.GradientStops>
                                        </LinearGradientBrush>

                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Button -->
        <Style x:Key="circleButtonPause" TargetType="Button">
            <Setter Property="SnapsToDevicePixels"
          Value="true" />
            <Setter Property="OverridesDefaultStyle"
          Value="true" />
            <Setter Property="FocusVisualStyle"
          Value="{StaticResource ButtonFocusVisual}" />
            <Setter Property="Width" Value="100"/>
            <Setter Property="Height" Value="100"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border TextBlock.Foreground="{TemplateBinding Foreground}"
                                x:Name="Border"
                                CornerRadius="50"
                                BorderThickness="1">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,1"
                                 StartPoint="0.5,0">
                                    <GradientStop Color="Orange" Offset="0" />
                                    <GradientStop Color="Orange" Offset="1" />
                                </LinearGradientBrush>
                            </Border.Background>
                            
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0:0:0.5" />
                                        <VisualTransition GeneratedDuration="0" To="Pressed" />
                                    </VisualStateGroup.Transitions>
                                    
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                                Storyboard.TargetName="Border">
                                                <EasingColorKeyFrame KeyTime="0" Value="DarkOrange" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                                Storyboard.TargetName="Border">
                                                <EasingColorKeyFrame KeyTime="0" Value="OrangeRed" />
                                            </ColorAnimationUsingKeyFrames>

                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                
                            </VisualStateManager.VisualStateGroups>
                            <ContentPresenter Margin="2"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            RecognizesAccessKey="True" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefault"
                   Value="true">

                                <Setter TargetName="Border"
                    Property="BorderBrush">
                                    <Setter.Value>
                                        <LinearGradientBrush StartPoint="0,0"
                                     EndPoint="0,1">
                                            <GradientBrush.GradientStops>
                                                <GradientStopCollection>
                                                    <GradientStop Color="{DynamicResource DefaultBorderBrushLightBrush}"
                                    Offset="0.0" />
                                                    <GradientStop Color="{DynamicResource DefaultBorderBrushDarkColor}"
                                    Offset="1.0" />
                                                </GradientStopCollection>
                                            </GradientBrush.GradientStops>
                                        </LinearGradientBrush>

                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="clockLetters" TargetType="TextBlock">
            <Setter Property="FontSize" Value="25"/>
        </Style>
        
    </UserControl.Resources>
    
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition/>
            <RowDefinition/>

        </Grid.RowDefinitions>


            <StackPanel Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Center">
                <TextBlock Style="{StaticResource clockLetters}" Text="{Binding ucTimerModel.MinuteTens, UpdateSourceTrigger=PropertyChanged}"/>
                <TextBlock Style="{StaticResource clockLetters}" Text="{Binding ucTimerModel.MinuteOnes, UpdateSourceTrigger=PropertyChanged}"/>
                <TextBlock Style="{StaticResource clockLetters}" Text=":"/>
                <TextBlock Style="{StaticResource clockLetters}" Text="{Binding ucTimerModel.SecondTens, UpdateSourceTrigger=PropertyChanged}"/>
                <TextBlock Style="{StaticResource clockLetters}" Text="{Binding ucTimerModel.SecondOnes, UpdateSourceTrigger=PropertyChanged}"/>
            </StackPanel>


        <Path Style="{StaticResource ProgressBarBase}" Margin="0 100 0 0"/>
        <Path x:Name="CircularProgressBar" Style="{StaticResource ProgressBarStyle}" Margin="0 100 0 0"/>



        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <!--<Button Grid.Column="2" Content="Pause" Command="{Binding PauseClick}" Style="{StaticResource circleButtonPause}" FontSize="25" Foreground="White">

                <Button.Resources>

                    <Storyboard x:Key="Start_Animation">

                        <DoubleAnimation BeginTime="0:0:0"
                                         Storyboard.TargetName="CircularProgressBar"
                                         Storyboard.TargetProperty="StrokeDashOffset"
                                         Duration="{Binding ucTimerModel.Durationa}"
                                         From="80"
                                         To="0" />

                        <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                         Storyboard.TargetName="CircularProgressBar"
                                         From="0"
                                         To="1"
                                         BeginTime="0:0:0"
                                         Duration="0:0:0" />

                        <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                         Storyboard.TargetName="CircularProgressBar"
                                         From="1"
                                         To="0"
                                         BeginTime="{Binding ucTimerModel.BeginOpacityZero}"
                                         Duration="0:0:0" />

                    </Storyboard>

                    <Storyboard x:Key="Stop_Animation">

                        <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                         Storyboard.TargetName="CircularProgressBar"
                                         From="1"
                                         To="0"
                                         BeginTime="0:0:0"
                                         Duration="0:0:0" />

                    </Storyboard>

                </Button.Resources>

                <Button.Triggers>

                    <EventTrigger RoutedEvent="Button.Click">
                        <BeginStoryboard Storyboard="{StaticResource Start_Animation}" />
                    </EventTrigger>


                </Button.Triggers>

            </Button>-->
            
            
            
            <Button Grid.Column="2" Content="Start" Command="{Binding CountdownClick}" Style="{StaticResource circleButtonGreen}" FontSize="25" Foreground="White">

                <Button.Resources>

                    <Storyboard x:Key="Start_Animation">

                        <DoubleAnimation BeginTime="0:0:0"
                         Storyboard.TargetName="CircularProgressBar"
                         Storyboard.TargetProperty="StrokeDashOffset"
                         Duration="{Binding ucTimerModel.Durationa}"
                         From="100"
                         To="0" />

                        <DoubleAnimation Storyboard.TargetProperty="Opacity"
                         Storyboard.TargetName="CircularProgressBar"
                         From="0"
                         To="1"
                         BeginTime="0:0:0"
                         Duration="0:0:0" />

                        <DoubleAnimation Storyboard.TargetProperty="Opacity"
                         Storyboard.TargetName="CircularProgressBar"
                         From="1"
                         To="0"
                         BeginTime="{Binding ucTimerModel.BeginOpacityZero}"
                         Duration="0:0:0" />

                    </Storyboard>

                    <Storyboard x:Key="Stop_Animation">

                        <DoubleAnimation Storyboard.TargetProperty="Opacity"
                         Storyboard.TargetName="CircularProgressBar"
                         From="1"
                         To="0"
                         BeginTime="0:0:0"
                         Duration="0:0:0" />

                    </Storyboard>

                </Button.Resources>

                <Button.Triggers>

                    <EventTrigger RoutedEvent="Button.Click">
                        <BeginStoryboard Storyboard="{StaticResource Start_Animation}" />
                    </EventTrigger>

                </Button.Triggers>


            </Button>
            
            <Button Content="Cancel" Command="{Binding CountdownCancelClick}" Style="{StaticResource circleButtonRed}" FontSize="25" Foreground="White">
                <Button.Resources>

                    <Storyboard x:Key="Start_Animation">

                        <DoubleAnimation BeginTime="0:0:0"
                         Storyboard.TargetName="CircularProgressBar"
                         Storyboard.TargetProperty="StrokeDashOffset"
                         Duration="{Binding ucTimerModel.Durationa}"
                         From="100"
                         To="0" />

                        <DoubleAnimation Storyboard.TargetProperty="Opacity"
                         Storyboard.TargetName="CircularProgressBar"
                         From="0"
                         To="1"
                         BeginTime="0:0:0"
                         Duration="0:0:0" />

                        <DoubleAnimation Storyboard.TargetProperty="Opacity"
                         Storyboard.TargetName="CircularProgressBar"
                         From="1"
                         To="0"
                         BeginTime="{Binding ucTimerModel.BeginOpacityZero}"
                         Duration="0:0:0" />

                    </Storyboard>

                    <Storyboard x:Key="Stop_Animation">

                        <DoubleAnimation Storyboard.TargetProperty="Opacity"
                         Storyboard.TargetName="CircularProgressBar"
                         From="1"
                         To="0"
                         BeginTime="0:0:0"
                         Duration="0:0:0" />

                    </Storyboard>

                </Button.Resources>

                <Button.Triggers>
                    
                    <EventTrigger RoutedEvent="Button.Click">
                        <BeginStoryboard Storyboard="{StaticResource Stop_Animation}" />
                    </EventTrigger>

                </Button.Triggers>

            </Button>



        </Grid>

    </Grid>
</UserControl>
